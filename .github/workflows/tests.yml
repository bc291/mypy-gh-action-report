---
name: Tests

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Install core dependencies
        run: |
            python -m pip install --upgrade pip
            pip install poetry

      - name: Set up py-${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - name: Install dependencies
        env:
          PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring
        run: poetry install

      - name: Test with tox
        run: poetry run tox

  cov:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"

      - name: Install core dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        env:
          PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring
        run: poetry install

      - name: Coverage
        run: poetry run pytest --cov-report=  --cov=mypy_gh_action_report tests/ > pytest-coverage.txt

      - name: pytest-coverage-commentator
        uses: coroo/pytest-coverage-commentator@v1.0.2
        with:
          pytest-coverage: pytest-coverage.txt

  mypy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"

      - name: Install core dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Install dependencies
        env:
          PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring
        run: poetry install --only type_check

      - name: Type check
        run: poetry run mypy mypy_gh_action_report

      - name: Generate changelog
        uses: charmixer/auto-changelog-action@v1
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          output: 'CHANGELOG-release.md'

      - name: Set CHANGELOG as an output
        id: changelog
        run: |
          echo "changelog=$(cat ./CHANGELOG-test.md)\n" >> $GITHUB_OUTPUT
        shell: bash

      - name: Comment CHANGELOG to PR
        if:  ${{ steps.changelog.outputs.changelog != '\n' }}
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: ${{steps.changelog.outputs.changelog}}
